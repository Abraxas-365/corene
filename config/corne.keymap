/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        holdtab: holdtab {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAB";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <150>;
        };
        kp_mod: kp_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_MOD";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
        kpmodr: kpmodr {
            compatible = "zmk,behavior-hold-tap";
            label = "KPMODR";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };
        kp_shift: kp_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_SHIFT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };
        kp_lt: kp_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_LT";
            bindings =
                <&lt>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
        stmo: stmo {
            compatible = "zmk,behavior-hold-tap";
            label = "STMO";
            bindings =
                <&mo>,
                <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };
        kp_stiky: kp_stiky {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_STIKY";
            bindings =
                <&kp>,
                <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-unless-interrupted";
        };
        holdtab2: holdtab2 {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAB2";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-unless-interrupted";
        };
    };

    macros {
        split_h: split_h {
            compatible = "zmk,behavior-macro";
            label = "SPLIT_H";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp MINUS>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <40 1>;
            timeout-ms = <250>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q                  &kp W  &kp E             &kp R          &kp T            &kp Y      &kp U                &kp I             &kp O    &kp P                     &none
&none  &kp A                  &kp S  &kp D             &kpmodr 3 F    &kp G            &kp H      &kp J                &kp K             &kp L    &kp SEMICOLON             &none
&none  &holdtab LEFT_SHIFT Z  &kp X  &kp C             &kp V          &kp B            &kp N      &kp M                &kp COMMA         &kp DOT  &holdtab LEFT_SHIFT FSLH  &none
                                     &kp LEFT_CONTROL  &kpmodr 1 TAB  &kpmodr 3 RET    &kp SPACE  &kpmodr 2 BACKSPACE  &kp LEFT_CONTROL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3            &kp N4  &kp N5    &kp N6      &kp N7          &kp N8            &kp N9           &kp N0     &kp BSPC
&trans     &trans  &trans  &trans            &trans  &trans    &kp LEFT    &kp DOWN_ARROW  &kp UP_ARROW      &kp RIGHT_ARROW  &kp LC(D)  &trans
&kp LSHFT  &trans  &trans  &trans            &trans  &trans    &caps_word  &kp LEFT_ALT    &kp LEFT_COMMAND  &trans           &trans     &trans
                           &kp LEFT_CONTROL  &trans  &trans    &kp TAB     &kp BACKSPACE   &kp LEFT_COMMAND
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp ESC            &kp PERCENT  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LS(PIPE)      &kp EXCLAMATION  &kp AMPS  &kp KP_MULTIPLY  &kp MINUS      &kp EQUAL  &kp BSPC
&none  &kp DOUBLE_QUOTES  &kp DOLLAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp TILDE         &trans           &kp LT    &kp GT           &kp PLUS       &kp COLON  &kp SQT
&none  &kp APOSTROPHE     &kp POUND    &kp LBKT              &kp RIGHT_BRACKET      &kp GRAVE         &none            &none     &trans           &kp BACKSLASH  &kp QMARK  &kp TILDE
                                       &kp LEFT_ALT          &kp BACKSPACE          &kp UNDERSCORE    &trans           &trans    &kp RALT
            >;
        };

        layer_5 {
            bindings = <
&trans      &trans        &trans        &trans  &trans  &kp LG(T)    &kp LG(C)  &trans     &kp LC(I)  &kp LC(O)  &kp RG(V)      &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &trans  &trans  &trans       &trans     &trans     &trans     &trans     &kp BACKSPACE  &trans
&trans      &trans        &trans        &trans  &trans  &trans       &trans     &trans     &trans     &trans     &trans         &trans
                                        &trans  &trans  &trans       &kp TAB    &kp LC(D)  &trans
            >;
        };
    };
};
