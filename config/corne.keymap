/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        holdtab: holdtab {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLDTAB";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <150>;
        };
        kp_mod: kp_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_MOD";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
        kpmodr: kpmodr {
            compatible = "zmk,behavior-hold-tap";
            label = "KPMODR";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };
        kp_shift: kp_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_SHIFT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            label = "NEW_MACRO";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp TAB>;
        };
        split_h: split_h {
            compatible = "zmk,behavior-macro";
            label = "SPLIT_H";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp MINUS>;
        };
    };

    combos {
        compatible = "zmk,combos";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB                    &kp Q  &kp W         &kp E                   &kp R            &kp T        &kp Y                    &kp U             &kp I    &kp O                        &kp P         &kp BSPC
  &kp ESC                    &kp A  &kp S         &kp D                   &kp F            &kp G        &kp H                    &kp J             &kp K    &kp L                     &kp SEMI        &kp ENTER
&kp LSHFT  &holdtab LEFT_CONTROL Z  &kp X         &kp C  &kp_shift LEFT_SHIFT V            &kp B        &kp N  &kp_shift RIGHT_SHIFT M         &kp COMMA  &kp DOT  &holdtab RIGHT_CONTROL FSLH  &kp RIGHT_SHIFT
                                           &kp LEFT_ALT                   &mo 1  &kpmodr 3 ENTER    &kp SPACE          &lt 2 BACKSPACE  &kp LEFT_COMMAND
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
   &kp TAB                            &kp N1           &kp N2           &kp N3        &kp N4        &kp N5        &kp N6     &kp N7         &kp N8     &kp N9             &kp N0  &kp BSPC
&bt BT_CLR                      &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      &kp LEFT   &kp DOWN         &kp UP  &kp RIGHT          &kp LC(D)    &trans
 &kp LSHFT  &rgb_ug RGB_COLOR_HSB(185,99,60)  &rgb_ug RGB_TOG  &rgb_ug RGB_BRI        &trans        &trans    &caps_word     &trans         &trans     &trans  &ext_power EP_TOG    &trans
                                                                         &none        &trans        &trans       &kp TAB  &kp LC(D)  &kp RIGHT_ALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE    &kp EXCLAMATION  &kp PERCENT        &kp LEFT_BRACE        &kp RIGHT_BRACE   &kp LS(PIPE)     &none   &kp AMPS  &kp KP_MULTIPLY             &none      &none   &kp BSPC
  &kp ESC  &kp DOUBLE_QUOTES   &kp DOLLAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS      &kp TILDE     &none  &kp EQUAL         &kp PLUS         &kp MINUS  &kp COLON    &kp SQT
 &kp BSLH     &kp APOSTROPHE    &kp POUND              &kp LBKT      &kp RIGHT_BRACKET         &trans     &none      &none    &kp LESS_THAN  &kp GREATER_THAN  &kp QMARK  &kp TILDE
                                                         &trans         &kp UNDERSCORE  &kp BACKSPACE    &trans     &trans         &kp RALT
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans    &trans  &trans  &trans  &kp LG(T)    &kp LG(C)         &trans  &trans   &trans  &kp RG(V)  &trans
&trans  &trans  &split_h  &trans  &trans     &trans       &trans  &kp BACKSPACE  &trans  &kp ESC     &trans  &trans
&trans  &trans    &trans  &trans  &trans     &trans       &trans         &trans  &trans   &trans     &trans  &trans
                          &trans  &trans     &trans      &kp TAB     &new_macro  &trans
            >;
        };
    };
};
